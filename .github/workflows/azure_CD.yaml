name: Deploy Backend to Azure ACI

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (e.g. sprint4)'
        required: true
        default: 'sprint4'

env:
  RESOURCE_GROUP: SEP4
  ACR_NAME: plantandgoacr
  IMAGE_NAME: backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR login server
        id: acr
        run: |
          echo "ACR_SERVER=$(az acr show \
            --name $ACR_NAME \
            --resource-group $RESOURCE_GROUP \
            --query loginServer -o tsv)" >> $GITHUB_ENV

      - name: Docker Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_SERVER }}
          username: ${{ env.ACR_NAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          platforms: linux/amd64
          push: true
          tags: ${{ env.ACR_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }}

      - name: Delete existing ACI (if any)
        run: |
          az container delete \
            --resource-group $RESOURCE_GROUP \
            --name sprint4-backend \
            --yes || echo "No existing container to delete"

      - name: Deploy to Azure Container Instances
        run: |
          az container create \
            --resource-group $RESOURCE_GROUP \
            --name sprint4-backend \
            --image ${{ env.ACR_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }} \
            --cpu 1 \
            --memory 1.5 \
            --registry-login-server ${{ env.ACR_SERVER }} \
            --registry-username $ACR_NAME \
            --registry-password "${{ secrets.ACR_PASSWORD }}" \
            --dns-name-label sprint4-backend \
            --ip-address public \
            --os-type Linux \
            --ports 80 \
            --environment-variables \
                MONGO_URL="${{ secrets.MONGO_URL }}" \
                MQTT_BROKER_URL="${{ secrets.MQTT_BROKER_URL }}"
