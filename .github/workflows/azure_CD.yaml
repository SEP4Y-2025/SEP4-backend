name: Deploy Backend to Azure ACI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (e.g. sprint1, sprint2)'
        required: true
        default: 'test'

env:
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  ACR_NAME:      ${{ vars.ACR_NAME }}
  ACR_SERVER:    ${{ vars.ACR_SERVER }}
  IMAGE_NAME:    backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Docker Login to ACR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.ACR_SERVER }}
        username: ${{ env.ACR_NAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build & Push Backend Image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.ACR_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }}

    - name: Delete existing ACI (if any)
      run: |
        az container delete \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name plantandgo-backend \
          --yes || echo "No existing container to delete"

    - name: Deploy to Azure Container Instances
      run: |
        az container create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name plantandgo-backend \
          --image ${{ env.ACR_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }} \
          --cpu 1 \
          --memory 1.5 \
          --registry-login-server ${{ env.ACR_SERVER }} \
          --registry-username ${{ env.ACR_NAME }} \
          --registry-password "${{ secrets.ACR_PASSWORD }}" \
          --dns-name-label plantandgo-backend \
          --ip-address public \
          --os-type Linux \
          --ports 80 \
          --environment-variables \
              MONGO_URL="${{ secrets.MONGO_URL }}" \
              MQTT_BROKER_URL="${{ secrets.MQTT_BROKER_URL }}"
